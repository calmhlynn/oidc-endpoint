name: Application build

on:
  push:
    branches: 
      - main
      - 'v*.*.*'

  pull_request:
    branches:
      - main

jobs:

  prepare-env:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - id: setup-image-tag
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            branch=${GITHUB_HEAD_REF}
          else
            branch=${GITHUB_REF_NAME}
          fi
          
          tag=$(git describe --tags --abbrev=0 || echo "no-tag")
          sanitized_branch=$(echo "$branch" | sed 's/[^a-zA-Z0-9_\.-]/-/g')
          
          echo "tag=$tag" >> $GITHUB_OUTPUT
          echo "branch=$sanitized_branch" >> $GITHUB_OUTPUT
          echo "tag_branch_sha=$tag-$sanitized_branch-${{ github.sha }}" >> $GITHUB_OUTPUT
    outputs:
      tag: ${{ steps.setup-image-tag.outputs.tag }}
      branch: ${{ steps.setup-image-tag.outputs.branch }}
      tag_branch_sha: ${{ steps.setup-image-tag.outputs.tag_branch_sha }}

  rust-build-test:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        name: Cargo cache
        with:
          path: |
            ~/.cargo/registry/
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-$$ {{ hashFiles('**/Cargo.lock ')}}
          restore-keys: |
            $${{ runner.os }}-cargo-

      - name: Application build
        run: cargo build --verbose

      - name: Application tests
        run: cargo test --verbose

  docker-build-test:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    needs: [rust-build-test, prepare-env]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: docker/login-action@v3
        name: Login to docker registry
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - uses: docker/build-push-action@v6
        name: build test for docker
        with:
          context: .
          push: false
          tags: ${{ secrets.IMAGE_NAME }}:${{ needs.prepare-env.outputs.tag_branch_sha }}
  
  docker-build-and-push:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    needs: [rust-build-test, prepare-env]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: docker/login-action@v3
        name: Login to docker registry
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - uses: docker/build-push-action@v6
        name: build and push
        with:
          context: .
          push: true
          tags: ${{ secrets.IMAGE_NAME }}:${{ needs.prepare-env.outputs.tag_branch_sha}}

  create-pr-for-version-update:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    needs: [docker-build-and-push, prepare-env]

    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ secrets.INFRA_REPO }}
          token: ${{ secrets.ACCESS_REPO_TOKEN }}
          fetch-depth: 0

      - uses: mikefarah/yq@master
        name: Update image.tag of infra for this app
        with:
          cmd: yq '.image.tag = "${{ needs.prepare-env.outputs.tag_branch_sha }}"' -i app/values.yaml

      - uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.ACCESS_REPO_TOKEN }}
          base: "main"
          branch: "chore/update-docker-tag-${{ needs.prepare-env.outputs.tag_branch_sha }}"
          title: "chore: Update app image tag"
          commit-message: "chore: update image.tag to ${{ needs.prepare-env.outputs.tag_branch_sha }}"
